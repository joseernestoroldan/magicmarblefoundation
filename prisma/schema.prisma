generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  firstName     String?
  secondName    String?
  email         String?   @unique
  password      String?
  country       String?
  codeNumber    String?
  number        String?
  emailVerified DateTime? @map("email_verified")
  image         String?
  address       String?
  subscribed    Boolean?
  role          UserRole  @default(USER)
  accounts      Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Adoption {
  id         String  @id @default(cuid())
  name       String?
  firstName  String?
  secondName String?
  email      String? 
  country    String?
  codeNumber String?
  number     String?
  address    String?
  status     String?  @default("pending")
  animalId   String? 
  animalName String?
}
